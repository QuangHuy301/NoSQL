{"ast":null,"code":"import * as React from 'react';\nimport Tooltip from 'rc-tooltip';\nimport { composeRef } from \"rc-util/es/ref\";\nimport raf from \"rc-util/es/raf\";\nvar SliderTooltip = React.forwardRef(function (props, ref) {\n  var visible = props.visible,\n    overlay = props.overlay;\n  var innerRef = React.useRef(null);\n  var tooltipRef = composeRef(ref, innerRef);\n  var rafRef = React.useRef(null);\n  function cancelKeepAlign() {\n    raf.cancel(rafRef.current);\n  }\n  function keepAlign() {\n    rafRef.current = raf(function () {\n      var _innerRef$current;\n      (_innerRef$current = innerRef.current) === null || _innerRef$current === void 0 ? void 0 : _innerRef$current.forcePopupAlign();\n    });\n  }\n  React.useEffect(function () {\n    if (visible) {\n      keepAlign();\n    } else {\n      cancelKeepAlign();\n    }\n    return cancelKeepAlign;\n  }, [visible, overlay]);\n  return React.createElement(Tooltip, Object.assign({\n    ref: tooltipRef\n  }, props));\n});\nexport default SliderTooltip;","map":{"version":3,"names":["React","Tooltip","composeRef","raf","SliderTooltip","forwardRef","props","ref","visible","overlay","innerRef","useRef","tooltipRef","rafRef","cancelKeepAlign","cancel","current","keepAlign","_innerRef$current","forcePopupAlign","useEffect","createElement","Object","assign"],"sources":["D:/mongodb/Nhom3_IVS_ThucTapChuyenNganh/frontend/node_modules/rc-slider/es/common/SliderTooltip.js"],"sourcesContent":["import * as React from 'react';\nimport Tooltip from 'rc-tooltip';\nimport { composeRef } from \"rc-util/es/ref\";\nimport raf from \"rc-util/es/raf\";\nvar SliderTooltip = React.forwardRef(function (props, ref) {\n  var visible = props.visible,\n      overlay = props.overlay;\n  var innerRef = React.useRef(null);\n  var tooltipRef = composeRef(ref, innerRef);\n  var rafRef = React.useRef(null);\n\n  function cancelKeepAlign() {\n    raf.cancel(rafRef.current);\n  }\n\n  function keepAlign() {\n    rafRef.current = raf(function () {\n      var _innerRef$current;\n\n      (_innerRef$current = innerRef.current) === null || _innerRef$current === void 0 ? void 0 : _innerRef$current.forcePopupAlign();\n    });\n  }\n\n  React.useEffect(function () {\n    if (visible) {\n      keepAlign();\n    } else {\n      cancelKeepAlign();\n    }\n\n    return cancelKeepAlign;\n  }, [visible, overlay]);\n  return React.createElement(Tooltip, Object.assign({\n    ref: tooltipRef\n  }, props));\n});\nexport default SliderTooltip;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,OAAO,MAAM,YAAY;AAChC,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,OAAOC,GAAG,MAAM,gBAAgB;AAChC,IAAIC,aAAa,GAAGJ,KAAK,CAACK,UAAU,CAAC,UAAUC,KAAK,EAAEC,GAAG,EAAE;EACzD,IAAIC,OAAO,GAAGF,KAAK,CAACE,OAAO;IACvBC,OAAO,GAAGH,KAAK,CAACG,OAAO;EAC3B,IAAIC,QAAQ,GAAGV,KAAK,CAACW,MAAM,CAAC,IAAI,CAAC;EACjC,IAAIC,UAAU,GAAGV,UAAU,CAACK,GAAG,EAAEG,QAAQ,CAAC;EAC1C,IAAIG,MAAM,GAAGb,KAAK,CAACW,MAAM,CAAC,IAAI,CAAC;EAE/B,SAASG,eAAeA,CAAA,EAAG;IACzBX,GAAG,CAACY,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC;EAC5B;EAEA,SAASC,SAASA,CAAA,EAAG;IACnBJ,MAAM,CAACG,OAAO,GAAGb,GAAG,CAAC,YAAY;MAC/B,IAAIe,iBAAiB;MAErB,CAACA,iBAAiB,GAAGR,QAAQ,CAACM,OAAO,MAAM,IAAI,IAAIE,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACC,eAAe,CAAC,CAAC;IAChI,CAAC,CAAC;EACJ;EAEAnB,KAAK,CAACoB,SAAS,CAAC,YAAY;IAC1B,IAAIZ,OAAO,EAAE;MACXS,SAAS,CAAC,CAAC;IACb,CAAC,MAAM;MACLH,eAAe,CAAC,CAAC;IACnB;IAEA,OAAOA,eAAe;EACxB,CAAC,EAAE,CAACN,OAAO,EAAEC,OAAO,CAAC,CAAC;EACtB,OAAOT,KAAK,CAACqB,aAAa,CAACpB,OAAO,EAAEqB,MAAM,CAACC,MAAM,CAAC;IAChDhB,GAAG,EAAEK;EACP,CAAC,EAAEN,KAAK,CAAC,CAAC;AACZ,CAAC,CAAC;AACF,eAAeF,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}